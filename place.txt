package provider;

public class Place {
    private String placeName;
    private String state;
    private String stateAbbreviation;

    Place(final String placeName, final String state, final String stateAbbreviation) {
        this.placeName = placeName;
        this.state = state;
        this.stateAbbreviation = stateAbbreviation;
    }

    public static Place.PlaceBuilder builder() {
        return new Place.PlaceBuilder();
    }

    private Place() {
    }

    public String getPlaceName() {
        return this.placeName;
    }

    public String getState() {
        return this.state;
    }

    public String getStateAbbreviation() {
        return this.stateAbbreviation;
    }

    public void setPlaceName(final String placeName) {
        this.placeName = placeName;
    }

    public void setState(final String state) {
        this.state = state;
    }

    public void setStateAbbreviation(final String stateAbbreviation) {
        this.stateAbbreviation = stateAbbreviation;
    }

    public boolean equals(final Object o) {
        if (o == this) {
            return true;
        } else if (!(o instanceof Place)) {
            return false;
        } else {
            Place other = (Place)o;
            if (!other.canEqual(this)) {
                return false;
            } else {
                label47: {
                    Object this$placeName = this.getPlaceName();
                    Object other$placeName = other.getPlaceName();
                    if (this$placeName == null) {
                        if (other$placeName == null) {
                            break label47;
                        }
                    } else if (this$placeName.equals(other$placeName)) {
                        break label47;
                    }

                    return false;
                }

                Object this$state = this.getState();
                Object other$state = other.getState();
                if (this$state == null) {
                    if (other$state != null) {
                        return false;
                    }
                } else if (!this$state.equals(other$state)) {
                    return false;
                }

                Object this$stateAbbreviation = this.getStateAbbreviation();
                Object other$stateAbbreviation = other.getStateAbbreviation();
                if (this$stateAbbreviation == null) {
                    if (other$stateAbbreviation != null) {
                        return false;
                    }
                } else if (!this$stateAbbreviation.equals(other$stateAbbreviation)) {
                    return false;
                }

                return true;
            }
        }
    }

    protected boolean canEqual(final Object other) {
        return other instanceof Place;
    }

    public int hashCode() {
        int PRIME = true;
        int result = 1;
        Object $placeName = this.getPlaceName();
        int result = result * 59 + ($placeName == null ? 43 : $placeName.hashCode());
        Object $state = this.getState();
        result = result * 59 + ($state == null ? 43 : $state.hashCode());
        Object $stateAbbreviation = this.getStateAbbreviation();
        result = result * 59 + ($stateAbbreviation == null ? 43 : $stateAbbreviation.hashCode());
        return result;
    }

    public String toString() {
        return "Place(placeName=" + this.getPlaceName() + ", state=" + this.getState() + ", stateAbbreviation=" + this.getStateAbbreviation() + ")";
    }

    public static class PlaceBuilder {
        private String placeName;
        private String state;
        private String stateAbbreviation;

        PlaceBuilder() {
        }

        public Place.PlaceBuilder placeName(final String placeName) {
            this.placeName = placeName;
            return this;
        }

        public Place.PlaceBuilder state(final String state) {
            this.state = state;
            return this;
        }

        public Place.PlaceBuilder stateAbbreviation(final String stateAbbreviation) {
            this.stateAbbreviation = stateAbbreviation;
            return this;
        }

        public Place build() {
            return new Place(this.placeName, this.state, this.stateAbbreviation);
        }

        public String toString() {
            return "Place.PlaceBuilder(placeName=" + this.placeName + ", state=" + this.state + ", stateAbbreviation=" + this.stateAbbreviation + ")";
        }
    }
}